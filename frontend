<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Unique Chatbot UI</title>
  <style>
    body {
      font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #667eea, #764ba2);
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .chat-container {
      width: 420px;
      height: 640px;
      background: rgba(255, 255, 255, 0.15);
      backdrop-filter: blur(12px);
      border-radius: 20px;
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
      display: flex;
      flex-direction: column;
      overflow: hidden;
      color: #fff;
    }

    /* Header */
    .chat-header {
      background: rgba(0, 0, 0, 0.3);
      padding: 15px;
      text-align: center;
      font-weight: bold;
      font-size: 18px;
      position: relative;
    }

    .chat-header::after {
      content: "üü¢ Online";
      font-size: 12px;
      position: absolute;
      right: 15px;
      top: 50%;
      transform: translateY(-50%);
      color: #a0ffa0;
    }

    /* Chat messages */
    .chat-box {
      flex: 1;
      padding: 15px;
      overflow-y: auto;
      display: flex;
      flex-direction: column;
      gap: 12px;
    }

    .message {
      max-width: 75%;
      padding: 12px 16px;
      border-radius: 18px;
      font-size: 14px;
      line-height: 1.4;
      position: relative;
      animation: fadeInUp 0.3s ease;
    }

    .bot {
      align-self: flex-start;
      background: rgba(255, 255, 255, 0.2);
    }

    .user {
      align-self: flex-end;
      background: #4f8df5;
    }

    .timestamp {
      font-size: 11px;
      opacity: 0.7;
      margin-top: 4px;
    }

    /* Input area */
    .input-area {
      display: flex;
      border-top: 1px solid rgba(255, 255, 255, 0.3);
      padding: 12px;
      background: rgba(0, 0, 0, 0.25);
    }

    .input-area input {
      flex: 1;
      padding: 10px;
      border: none;
      border-radius: 25px;
      outline: none;
      font-size: 14px;
      background: rgba(255, 255, 255, 0.2);
      color: #fff;
    }

    .input-area input::placeholder {
      color: #eee;
    }

    .input-area button {
      margin-left: 10px;
      padding: 0 16px;
      border: none;
      border-radius: 50%;
      background: #4f8df5;
      color: white;
      cursor: pointer;
      font-size: 18px;
      transition: 0.2s;
    }

    .input-area button:hover {
      background: #2d6ce0;
    }

    /* Animations */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

  </style>
</head>
<body>
  <div class="chat-container">
    <div class="chat-header">üíº Interview ChatBot</div>
    <div class="chat-box" id="chatBox">
      <div class="message bot">
        Hello! How can I help you today?
        <div class="timestamp">10:00 AM</div>
      </div>
    </div>
    <div class="input-area">
      <input type="text" id="userInput" placeholder="Type a message...">
      <button onclick="sendMessage()"><span>&#8658;</span></button>
    </div>
  </div>

  <script>
const chatBox = document.getElementById('chatBox');
const userInput = document.getElementById('userInput');

function getTime() {
  const now = new Date();
  let hours = now.getHours();
  let minutes = now.getMinutes().toString().padStart(2, '0');
  let ampm = hours >= 12 ? 'PM' : 'AM';
  hours = hours % 12 || 12;
  return `${hours}:${minutes} ${ampm}`;
}

// Send message function
function sendMessage() {
  const text = userInput.value.trim();
  if (text === '') return;

  // Add user message
  const userMsg = document.createElement('div');
  userMsg.className = 'message user';
  userMsg.innerHTML = text + `<div class="timestamp">${getTime()}</div>`;
  chatBox.appendChild(userMsg);

  userInput.value = '';
  chatBox.scrollTop = chatBox.scrollHeight;

  // Typing indicator
  const typingMsg = document.createElement('div');
  typingMsg.className = 'message bot';
  typingMsg.innerHTML = "üí¨ Bot is typing...";
  chatBox.appendChild(typingMsg);
  chatBox.scrollTop = chatBox.scrollHeight;

  // Send to backend
  fetch("add the url/chat", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ message: text })
  })
  .then(res => res.json())
  .then(data => {
    typingMsg.remove(); // remove typing message

    const botMsg = document.createElement('div');
    botMsg.className = 'message bot';
    botMsg.innerHTML = data.reply + `<div class="timestamp">${getTime()}</div>`;
    chatBox.appendChild(botMsg);
    chatBox.scrollTop = chatBox.scrollHeight;
  })
  .catch(err => {
    typingMsg.remove(); // remove typing message

    const errorMsg = document.createElement('div');
    errorMsg.className = 'message bot';
    errorMsg.innerHTML = "‚ö†Ô∏è Error connecting to backend";
    chatBox.appendChild(errorMsg);
    chatBox.scrollTop = chatBox.scrollHeight;
    console.error(err);
  });
}

// Press Enter to send
userInput.addEventListener("keypress", function(e) {
  if (e.key === "Enter") sendMessage();
});
</script>

</body>
</html>
